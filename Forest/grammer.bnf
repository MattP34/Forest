//link to github https://github.com/MattP34/ProgrammingLanguages

program ::= statement*

statement ::= expression ";"
            | instantiation ";"
            | func_declaration ";"
            | control_statement
            | block ";"
            | return_statement ";"

expression ::= literal
             | variable
             | expression
             | operator_list "(" expression_list ")"
             | binary_operator "(" expression ")"
             | func_call

expression_list ::= expression ("," + expression_list)?

instantiation ::= expression "->" variable_tree

func_declaration ::= "func" INDENTIFIER "(" parameter_list ")" block

control_statement ::= while_loop
                    | if_statement

while_loop ::= "while" "(" expression ")" block

if_statement ::= "if" "(" expression ")" block (elif_statement | else_statement)?

elif_statement ::= "elif" "(" expression ")" block (elif_statement | else_statement)?

else_statement ::= "else" block

block ::= "{" statement* "}"

return_statement ::= "return" expression_list

parameter_list ::= INDENTIFIER + "," + parameter_list

variable ::= INDENTIFIER ("_" variable)?

variable_tree ::= variable (variable "," variable_tree)?

operator_list ::= variadic_operator
                | operator NUMBER? "$" operator_list

variadic_operator ::= comparator | math_operator | boolean_operator | "[]"

comparator ::=  ">" | "<" | ">=" | "<=" | "=="

math_operator ::= "+" | "-" | "*" | "/" | "**"

boolean_operator ::= "||" | "&&"

binary_operator ::= "!" | "=" | "-"

func_call ::= INDENTIFIER "(" expression_list ")"

literal ::= boolean
          | integer
          | float
          | character
          | string

boolean ::= "true" | "false"

integer ::= "-"? NUMBER

float ::= "-"? NUMBER "." NUMBER?

character ::= "\'" CHARACTER "\'"

string ::= "\"" STRING "\""
